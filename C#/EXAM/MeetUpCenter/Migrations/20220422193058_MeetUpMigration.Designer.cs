// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeetUpCenter.Migrations
{
    [DbContext(typeof(MeetUpsContext))]
    [Migration("20220422193058_MeetUpMigration")]
    partial class MeetUpMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MeetUp", b =>
                {
                    b.Property<int>("MeetUpID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("dateAndTime")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("duration")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("MeetUpID");

                    b.ToTable("MeetUps");
                });

            modelBuilder.Entity("MeetUpCenter.Models.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("userID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MeetUpJoined", b =>
                {
                    b.Property<int>("meetUpJoinedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("MeetUpID")
                        .HasColumnType("int");

                    b.Property<int>("meetUpID_J")
                        .HasColumnType("int");

                    b.Property<int?>("userID")
                        .HasColumnType("int");

                    b.Property<int>("userID_J")
                        .HasColumnType("int");

                    b.HasKey("meetUpJoinedID");

                    b.HasIndex("MeetUpID");

                    b.HasIndex("userID");

                    b.ToTable("MeetUpsJoined");
                });

            modelBuilder.Entity("MeetUpJoined", b =>
                {
                    b.HasOne("MeetUp", "MeetUp")
                        .WithMany("UsersJoined")
                        .HasForeignKey("MeetUpID");

                    b.HasOne("MeetUpCenter.Models.User", "User")
                        .WithMany("meetUpJoinedTB")
                        .HasForeignKey("userID");
                });
#pragma warning restore 612, 618
        }
    }
}
